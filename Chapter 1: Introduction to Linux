<a href="README.md">&laquo; main menu</a>

Linux itself was first created by a Finnish student named Linus Torvalds in 1991. Torvalds was a student at the University of Helsinki in Finland where he had been using Minix, a non-free Unix-like system, and began writing his own kernel. He started by developing device drivers and hard-drive access, and by September had a basic design that he called Version 0.01.
This kernel, which is called Linux, was afterwards combined with the GNU system to produce a complete free operating system.  During this time, Linus decided to license the kernel using the GPL license, meaning that it was open source. People were free to look at the code, modify it to their needs, and then distribute it to others (under the same license).  On October 5th, 1991, Torvalds sent a posting to the comp.os.minix newsgroup announcing the release of Version 0.02. saying, “Hello everybody out there using minix — I’m doing a (free) operating system (just a hobby, won’t be big and professional like gnu) for 386 (486) AT clones.” Over the course of over two decades, the hobby operating system has turned into a major piece of software that now powers millions of devices all over the world.
On October 5th, 1991, Torvalds sent a posting to the comp.os.minix newsgroup announcing the release of Version 0.02, a basic version that still needed Minix to operate, but which attracted considerable interest nevertheless. The kernel was then rapidly improved by Torvalds and a growing number of volunteers communicating over the Internet, and by December 19th a functional, stand-alone Unix-like Linux system was released as Version 0.11.
On January 5, 1992, Linux Version 0.12 was released, an improved, stable kernel. The next release was called Version 0.95, to reflect the fact that it was becoming a full-featured system. After that Linux became an underground phenomenon, with a growing group of distributed programmers that continue to debug, develop, and enhance the source code baseline to this day.
Linus continued to be improved through the 1990's, and started to be used in large-scale applications like web hosting, networking, and database serving, proving ready for production use. Version 2.2, a major update to the Linux kernel, was officially released in January 1999. By the year 2000, most computer companies supported Linux in one way or another, recognizing a common standard that could finally reunify the fractured world of the Unix Wars. The next major release was V2.4 in January 2001, providing (among other improvements) compatibility with the upcoming generations of Intel's 64-bit Itanium computer processors.
Torvalds later said that while he did indeed have a close and personal encounter with a penguin, the bird wasn't ferocious, and just timidly nibbled on Torvald's finger.
The general consensus among the Linux development community is that Torvalds was never attacked, nibbled, or otherwise molested by a penguin, but became fixated on Tux because a fat penguin wasn't a typical corporate logo, a theory that has been backed by later statements from Torvalds.
Before Tux came into being, many thought a strong, smart and fierce beast would be the best representative for Linux.
Sharks, foxes, eagles and hawks were discussed on the Linux-kernel mailing list, a discussion forum for Linux developers.
But then Torvalds spoke up and said he thought that a penguin would be the perfect Linux logo.
But not just any penguin -– Torvalds specifically wanted to steer away from the "macho penguin" image, and instead urged the developers to focus on creating an image of a cute, cuddly and contented penguin.
Torvalds discussed the finer points of penguins with the list members, suggesting that "contented" means that the penguin "has either just gotten laid, or it's stuffed on herring."

https://www.youtube.com/watch?v=obJOwEy62b

# Chapter 1: Introduction to Linux

## 1.1 What is Linux?
- **Linux Kernel**: Discuss the Linux kernel as the core of the operating system, managing hardware and system processes.
- **Unix-like Operating System**: Explain how Linux is based on Unix principles, emphasizing multitasking, multiuser functionality, and the open-source model.
- **Open-Source Model**: Overview of what open source means, the community-driven development model, and the freedom to modify and distribute the software.
- **Linux Use Cases**: Describe the various environments where Linux is used (e.g., servers, desktops, mobile devices, embedded systems, cloud infrastructure).

## 1.2 Linux Distributions (Distros)
- **Definition of a Distro**: Explain that a Linux distribution is an operating system built from the Linux kernel and additional software packages.
- **Popular Distributions**:
  - **Ubuntu**: Focus on ease of use, popular among beginners.
  - **Debian**: A stable, long-lasting distribution.
  - **CentOS/RHEL**: Known for enterprise-level reliability.
  - **Arch Linux**: Minimalist, aimed at advanced users who want full control.
  - **Fedora**: Focuses on innovation and cutting-edge technologies.
- **Choosing a Distribution**: Criteria for selecting the right distribution based on user needs (e.g., desktop vs server, ease of use vs control).

## 1.3 Key Differences from Other Operating Systems
- **Linux vs Windows**:
  - **Open Source vs Proprietary**: Contrast the licensing and development models.
  - **File System Differences**: Windows uses NTFS, while Linux commonly uses ext4, among others.
  - **Command Line vs GUI**: Highlight how Linux emphasizes the command line for system administration, while Windows primarily focuses on GUI-based administration.
- **Linux vs macOS**: 
  - **Similarities**: Both are Unix-based, offering command-line interfaces (Bash in Linux, zsh in macOS).
  - **Differences**: Software availability, package management, and customization options.

## 1.4 Open Source Philosophy
- **Free Software Foundation (FSF)**: Explain Richard Stallman’s role in promoting free software, and the four freedoms: to run, study, modify, and share software.
- **GNU General Public License (GPL)**: Overview of the GPL license, which ensures that software remains free and open.
- **Benefits of Open Source**:
  - **Transparency**: Source code is open for inspection.
  - **Security**: More eyes on the code means vulnerabilities can be spotted and fixed more quickly.
  - **Community Contributions**: The Linux community consists of developers, testers, and users, all working together to improve the system.

## 1.5 Linux Ecosystem
- **Kernel Development**: Brief history of Linus Torvalds creating the Linux kernel in 1991, and how development has continued through community collaboration.
- **GNU Project**: Describe how the GNU Project provides essential tools (compilers, shells, editors) that complement the Linux kernel to form a complete OS.
- **Linux Foundation**: Role of the Linux Foundation in promoting, protecting, and standardizing Linux globally.

<a href="README.md">&laquo; main menu</a>
